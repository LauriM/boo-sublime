{ "name": "Boo",
  "scopeName": "source.boo",
  "fileTypes": ["boo"],
  "patterns": [

	  {  "name": "keyword.control.source.boo",
	     "match": "\\b(import|from|if|else|elif|unless|for|in|while|continue|break|pass|return|override|struct|namespace|enum|try|raise|except|ensure|assert|yield|callable|goto|virtual|get|set|of|ref|unsafe|new|match|case|otherwise|debug|using|lock|block|macro|self|event)\\b"
	  },

	  {
	     "match": "\\b(isa|is|as|cast)\\b",
	     "name": "keyword.operator.types.source.boo"
	  },

	  {
	     "match": "\\b(and|or|not)\\b",
	     "name": "keyword.operator.logical.source.boo"
	  },

	  {
	     "match": "(\\*=|/=|%=|\\+=|-=|\\*\\*=|>>=|<<=|&=|\\|=|\\^=|\\+\\+|--)",
	     "name": "keyword.operator.assignment.augmented.source.boo"
	  },

	  {
	     "match": "(\\*|/|%|\\+|-|\\*\\*|>>|<<|&|\\||\\^)",
	     "name": "keyword.operator.arithmetic.source.boo"
	  },

	  {
	     "match": "(<|>|<=|>=|==|!=)",
	     "name": "keyword.operator.comparison.source.boo"
	  },
	  
	  {
	     "match": "(=)",
	     "name": "keyword.operator.assignment.source.boo"
	  },

	  {  "name": "keyword.operator.source.boo",
	     "match": "(\\(|\\)|\\[|\\]|{|}|:)"
	  },

	  { "name": "comment.line.source.boo",
	    "begin": "(#|//)",
	    "end": "\\n"
	  },

	  { "name": "comment.block.source.boo",
	    "begin": "/\\*",
	    "end": "\\*/"
	  },

	  {  "name": "constant.numeric.source.boo",
	     "match": "\\b\\d+(\\.\\d+)?(f|F|L)?\\b"
	  },

	  {  "name": "constant.language.source.boo",
	     "match": "\\b(true|false|null|value)\\b"
	  },

	  { "name": "string.quoted.single.source.boo",
	    "begin": "'",
	    "end": "'"
	  },

	  { "name": "string.quoted.double.source.boo",
	    "begin": "\"",
	    "end": "\""
	  },

	  { "name": "string.quoted.double.source.boo",
	    "begin": "\"\"\"",
	    "end": "\"\"\""
	  },

	  {  "name": "storage.type.source.boo",
	     "match": "\\b(sbyte|short|int|long|byte|ushort|uint|ulong|single|double|decimal|char|string|bool|object|duck|date)\\b"
	  },

	  {  "name": "storage.modifier.source.boo",
	     "match": "\\b(public|protected|internal|private|abstract|final|static|partial)\\b"
	  },

	  {  "name": "support.function.source.boo",
	     "match": "\\b(print|gets|prompt|join|map|array|matrix|iterator|shellp|shell|shellm|super|enemurate|range|reversed|zip|cat|typeof|sizeof|len)\\b"
	  },

	  {
	     "match": "\\b([a-z_]+[A-Za-z_0-9]*\\s+(as))\\b",
	     "captures": {
	         "1": { "name": "variable.source.boo" },
	         "2": { "name": "keyword.operator.source.boo" }
	     }
	  },

	  {
         "begin": "\\b(def)\\s+(?=[A-Za-z_][A-Za-z0-9_]*\\s*\\()",
         "beginCaptures": {
             "1": {
                 "name": "storage.type.function.source.boo"
             }
         },
         "end": "(\\))\\s*(?:(\\:?))",
         "endCaptures": {
             "1": {
                 "name": "keyword.operator.source.boo"
             },
             "2": {
                 "name": "keyword.operator.source.boo"
             }
         },
         "name": "meta.function.source.boo",
         "patterns": [
             {
                 "begin": "(?=[A-Za-z_][A-Za-z0-9_]*)",
                 "contentName": "entity.name.function.source.boo",
                 "end": "(?![A-Za-z0-9_])",
                 "patterns": [
                     {
                         "include": "#entity_name_function"
                     }
                 ]
             },
             {
                 "begin": "(\\()",
                 "beginCaptures": {
                     "1": {
                         "name": "keyword.operator.source.boo"
                     }
                 },
                 "contentName": "meta.function.parameters.source.boo",
                 "end": "(?=\\)\\s*\\:?)",
                 "patterns": [
                     {
                         "include": "#keyword_arguments"
                     },
                     {
                         "include": "$self"
                     }
                 ]
             }
         ]
	  },

	  {
	      "begin": "^\\s*(class|interface)\\s+(?=[a-zA-Z_][a-zA-Z_0-9]*\\s*\\:)",
	      "beginCaptures": {
	          "1": {
	              "name": "storage.type.class.source.boo"
	          }
	      },
	      "contentName": "entity.name.class.source.boo",
	      "end": "\\s*(:)",
	      "endCaptures": {
	          "1": {
	              "name": "keyword.operator.source.boo"
	          }
	      },
	      "name": "meta.class.old-style.source.boo",
	      "patterns": [
	          {
	              "include": "#entity_name_class"
	          }
	      ]
	  },

	  {
	      "begin": "\\b(class|interface)\\s+(?=[a-zA-Z_][a-zA-Z_0-9]*\\s*\\()",
	      "beginCaptures": {
	          "1": {
	              "name": "storage.type.class.source.boo"
	          }
	      },
	      "end": "(\\))\\s*(?:(\\:)|(.*$\\n?))",
	      "endCaptures": {
	          "1": {
	              "name": "keyword.operator.source.boo"
	          },
	          "2": {
	              "name": "keyword.operator.source.boo"
	          },
	          "3": {
	              "name": "invalid.illegal.missing-section-begin.source.boo"
	          }
	      },
	      "name": "meta.class.source.boo",
	      "patterns": [
	          {
	              "begin": "(?=[A-Za-z_][A-Za-z0-9_]*)",
	              "contentName": "entity.name.class.source.boo",
	              "end": "(?![A-Za-z0-9_])",
	              "patterns": [
	                  {
	                      "include": "#entity_name_class"
	                  }
	              ]
	          },
	          {
	              "begin": "(\\()",
	              "beginCaptures": {
	                  "1": {
	                      "name": "keyword.operator.source.boo"
	                  }
	              },
	              "contentName": "meta.class.inheritance.source.boo",
	              "end": "(?=\\)|:)",
	              "patterns": [
	                  {
	                      "begin": "(?<=\\(|,)\\s*",
	                      "contentName": "entity.other.inherited-class.source.boo",
	                      "end": "\\s*(?:(,)|(?=\\)))",
	                      "endCaptures": {
	                          "1": {
	                              "name": "punctuation.separator.inheritance.source.boo"
	                          }
	                      },
	                      "patterns": [
	                          {
	                              "include": "$self"
	                          }
	                      ]
	                  }
	              ]
	          }
	      ]
	  }
  ],
  "repository": {
	  "keyword_arguments": {
	      "begin": "\\b([a-zA-Z_][a-zA-Z_0-9]*)\\s*",
	      "beginCaptures": {
	          "1": {
	              "name": "variable.parameter.function.python"
	          }
	      },
	      "end": "\\s*(?:(,)|(?=\\n|\\)[:\\s]))",
	      "endCaptures": {
	          "1": {
	              "name": "punctuation.separator.parameters.python"
	          }
	      },
	      "patterns": [
	          {
	              "include": "$self"
	          }
	      ]
	  }
  },

  "uuid": "40d7173c-d213-4009-938e-5249ec75849d"
}
